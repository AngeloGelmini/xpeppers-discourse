---
AWSTemplateFormatVersion: '2010-09-09'
Description: Postgres RDS for discourse
Parameters:
  VpcId:
    Type: AWS::SSM::Parameter::Value<String>
    Default: discourse-common-VpcId
  SubnetIdA:
    Type: AWS::SSM::Parameter::Value<String>
    Default: discourse-common-SubnetIdA
  SubnetIdB:
    Type: AWS::SSM::Parameter::Value<String>
    Default: discourse-common-SubnetIdB
  DBInstanceType:
    Description: RDS database instance
    Type: AWS::SSM::Parameter::Value<String>
    Default: discourse-rds-DBInstanceType
  DBPassword:
    Description: Password for database
    Type: AWS::SSM::Parameter::Value<String>
    Default: discourse-rds-DBPassword
    NoEcho: true
  RDSSnapshotName:
    Description: Name of the RDS snapshot from which create RDS
    Type: String
    Default: ""
  PostgresEngineVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: discourse-rds-PostgresEngineVersion
    Description: Version of the postgres server engine
  VPCcidr:
    Description: CIDR of the VPC
    Type: AWS::SSM::Parameter::Value<String>
    Default: discourse-common-VPCcidr
  ApplicationName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: discourse-common-ApplicationName
  EnvironmentVersion:
    Type: String
    Default: v0
  DomainName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: discourse-common-DomainName

Conditions:
  HasSnapshot:
    !Not [!Equals [!Ref RDSSnapshotName, '']]

Resources:

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "Subnet for RDS"
      SubnetIds:
        - !Ref SubnetIdA
        - !Ref SubnetIdB
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security group for RDS"
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '5432'
        ToPort: '5432'
        CidrIp: !Ref VPCcidr
  PostgresRDS:
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: Snapshot
    Properties:
      DBSnapshotIdentifier: !If [ HasSnapshot, !Ref RDSSnapshotName, !Ref "AWS::NoValue"]
      DBInstanceIdentifier: !Sub ${ApplicationName}-${EnvironmentVersion}
      AllocatedStorage: "10"
      DBInstanceClass: !Ref DBInstanceType
      Engine: "postgres"
      EngineVersion: !Ref PostgresEngineVersion
      AllowMajorVersionUpgrade: True
      MasterUsername:
        !If
          - HasSnapshot
          - !Ref AWS::NoValue
          - 'root'
      MasterUserPassword:
        !If
          - HasSnapshot
          - !Ref AWS::NoValue
          - !Ref DBPassword
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups:
        - !Ref DBSecurityGroup

#Route53
  PostgresRDSdns:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Sub ${DomainName}.
      TTL: 300
      Name: !Sub ${ApplicationName}db-${EnvironmentVersion}.${DomainName}.
      Type: CNAME
      ResourceRecords:
        - !GetAtt PostgresRDS.Endpoint.Address