---
- name: ensure docker is running
  service: name=docker state=restarted
  sudo: yes

- name: add discourse user
  user: name=discourse groups=sudo,admin

- name: copy discourse source
  synchronize: src={{playbook_dir}}/../discourse_docker/ dest=/home/discourse/discourse rsync_opts="--exclude=.git"
  sudo: yes
  # notify:
  #   - stop discourse
  #   - rebuild discourse

- name: fix discourse permissions
  file: path=/home/discourse/discourse owner=discourse group=discourse recurse=yes

# - name: Create /var/discourse/shared/standalone/ssl directory
#   file: path=/var/discourse/shared/standalone/ssl state=directory owner=discourse group=sudo

# - name: copy ssl key
#   copy: src=ssl.key dest=/var/discourse/shared/standalone/ssl/ssl.key owner=discourse group=sudo
#   when: ssl_key is defined
#   notify:
#     - stop discourse
#     - rebuild discourse

# - name: copy ssl crt
#   copy: src=ssl.crt dest=/var/discourse/shared/standalone/ssl/ssl.crt owner=discourse group=sudo
#   when: ssl_crt is defined
#   notify:
#     - stop discourse
#     - rebuild discourse

# - meta: flush_handlers

# - name: restart discourse ! handler
#   command: echo "start discourse"
#   when: true
#   notify:
#     - restart discourse

# - name: check for backup.cron.sh
#   local_action: stat path={{ role_path }}/files/backup.cron.sh
#   register: backup_cron_exists

# - name: copy backup.cron.sh
#   sudo: yes
#   copy: src=backup.cron.sh dest=/home/discourse/backup.cron.sh owner=discourse group=sudo
#   when: backup_cron_exists

# # runs cron script @ 10,16,22:00 => 8,14,20:00 GMT+1
# - name: enable backup.cron.sh
#   sudo: yes
#   cron: name="run backup cron script" minute="0" hour="10,16,22" job="sh /home/discourse/backup.cron.sh"
#   when: backup_cron_exists
